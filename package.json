{
  "name": "typesafe-vuex",
  "version": "3.2.2",
  "description": "A simple way to get static typing, static code analysis and intellisense with Vuex library - maintained fork of vuex-typescript",
  "files": [
    "dist/index.js",
    "dist/index.d.ts",
    "helpers/index.js",
    "helpers/index.d.ts"
  ],
  "main": "dist/index.js",
  "typings": "dist/index.d.ts",
  "author": "jackkoppa",
  "license": "MIT",
  "repository": "https://github.com/jackkoppa/typesafe-vuex",
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "devDependencies": {
    "@types/chai": "^3.4.35",
    "@types/chai-http": "^0.0.30",
    "@types/mocha": "^2.2.44",
    "@types/terser": "^3.12.0",
    "@types/terser-webpack-plugin": "^1.2.1",
    "@types/webpack": "^4.4.34",
    "chai": "^3.5.0",
    "coveralls": "^3.0.2",
    "mocha": "^10.2.0",
    "nyc": "^14.1.1",
    "rimraf": "^2.6.1",
    "tslint": "^5.18.0",
    "typescript": "^2.6.1",
    "vue": "^2.5.3",
    "vuex": "^3.0.1"
  },
  "peerDependencies": {
    "vuex": "3.x"
  },
  "scripts": {
    "clean": "rimraf dist && rimraf helpers && rimraf coverage",
    "lint-force": "tslint --force --format verbose \"src/**/*.ts\"",
    "lint": "tslint --format verbose \"src/**/*.ts\"",
    "compile": "echo Using TypeScript && tsc --version && tsc --pretty",
    "compile-watch": "npm run compile -- --watch",
    "build": "npm run clean && npm run lint-force && npm run compile && node ./build/moveHelpers.js",
    "build-watch": "npm run clean && npm run lint-force && npm run compile-watch",
    "test": "npm run coverage",
    "test-only": "mocha --recursive dist/**/*.spec.js",
    "test-watch": "npm run test-only -- --watch",
    "test-debug": "mocha --debug-brk --debug=0.0.0.0:5858 dist/**/*.spec.js",
    "coverage": "rimraf coverage && nyc --reporter=html --reporter=text --reporter=lcov -x **/*.spec.js npm run test-only",
    "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls",
    "preversion": "npm run test && npm run build",
    "postversion": "git push && git push --tags && npm publish"
  }
}
